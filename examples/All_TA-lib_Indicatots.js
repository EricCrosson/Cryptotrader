// Generated by CoffeeScript 1.12.7
(function() {
  var functions;

  functions = (function() {
    function functions() {}

    functions.accbands = function(high, low, close, lag, period) {
      var result, results;
      results = talib.ACCBANDS({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      result = {
        UpperBand: _.last(results.outRealUpperBand),
        MiddleBand: _.last(results.outRealMiddleBand),
        LowerBand: _.last(results.outRealLowerBand)
      };
      return result;
    };

    functions.ad = function(high, low, close, volume, lag, period) {
      var results;
      results = talib.AD({
        high: high,
        low: low,
        close: close,
        volume: volume,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.adosc = function(high, low, close, volume, lag, FastPeriod, SlowPeriod) {
      var results;
      results = talib.ADOSC({
        high: high,
        low: low,
        close: close,
        volume: volume,
        startIdx: 0,
        endIdx: high.length - lag,
        optInFastPeriod: FastPeriod,
        optInSlowPeriod: SlowPeriod
      });
      return _.last(results);
    };

    functions.adx = function(high, low, close, lag, period) {
      var results;
      results = talib.ADX({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.adxr = function(high, low, close, lag, period) {
      var results;
      results = talib.ADXR({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.apo = function(data, lag, FastPeriod, SlowPeriod, MAType) {
      var results;
      results = talib.APO({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInFastPeriod: FastPeriod,
        optInSlowPeriod: SlowPeriod,
        optInMAType: MAType
      });
      return _.last(results);
    };

    functions.aroon = function(high, low, lag, period) {
      var result, results;
      results = talib.AROON({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      result = {
        up: _.last(results.outAroonUp),
        down: _.last(results.outAroonDown)
      };
      return result;
    };

    functions.aroonosc = function(high, low, lag, period) {
      var results;
      results = talib.AROONOSC({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.atr = function(high, low, close, lag, period) {
      var results;
      results = talib.ATR({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.avgprice = function(open, high, low, close, lag, period) {
      var results;
      results = talib.AVGPRICE({
        open: open,
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: open.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.bbands = function(data, period, lag, NbDevUp, NbDevDn, MAType) {
      var result, results;
      results = talib.BBANDS({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInNbDevUp: NbDevUp,
        optInNbDevDn: NbDevDn,
        optInMAType: MAType
      });
      result = {
        UpperBand: _.last(results.outRealUpperBand),
        MiddleBand: _.last(results.outRealMiddleBand),
        LowerBand: _.last(results.outRealLowerBand)
      };
      return result;
    };

    functions.beta = function(data_0, data_1, lag, period) {
      var results;
      results = talib.BETA({
        inReal0: data_0,
        inReal1: data_1,
        startIdx: 0,
        endIdx: data_0.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.bop = function(open, high, low, close, lag) {
      var results;
      results = talib.BOP({
        open: open,
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag
      });
      return _.last(results);
    };

    functions.cci = function(high, low, close, lag, period) {
      var results;
      results = talib.CCI({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.cmo = function(data, lag, period) {
      var results;
      results = talib.CMO({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.correl = function(data_0, data_1, lag, period) {
      var results;
      results = talib.CORREL({
        inReal0: data_0,
        inReal1: data_1,
        startIdx: 0,
        endIdx: data_0.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.dema = function(data, lag, period) {
      var results;
      results = talib.DEMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.dx = function(high, low, close, lag, period) {
      var results;
      results = talib.DX({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.ema = function(data, lag, period) {
      var results;
      results = talib.EMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.ht_dcperiod = function(data, lag) {
      var results;
      results = talib.HT_DCPERIOD({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      return _.last(results);
    };

    functions.ht_dcphase = function(data, lag) {
      var results;
      results = talib.HT_DCPHASE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      return _.last(results);
    };

    functions.ht_phasor = function(data, lag) {
      var result, results;
      results = talib.HT_PHASOR({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      result = {
        phase: _.last(results.outInPhase),
        quadrature: _.last(results.outQuadrature)
      };
      return result;
    };

    functions.ht_sine = function(data, lag) {
      var result, results;
      results = talib.HT_SINE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      _.last(results);
      result = {
        sine: _.last(results.outSine),
        leadsine: _.last(results.outLeadSine)
      };
      return result;
    };

    functions.ht_trendline = function(data, lag) {
      var results;
      results = talib.HT_TRENDLINE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      return _.last(results);
    };

    functions.ht_trendmode = function(data, lag) {
      var results;
      results = talib.HT_TRENDMODE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag
      });
      return _.last(results);
    };

    functions.imi = function(high, close, lag, period) {
      var results;
      results = talib.IMI({
        open: open,
        close: close,
        startIdx: 0,
        endIdx: open.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.kama = function(data, lag, period) {
      var results;
      results = talib.KAMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.linearreg = function(data, lag, period) {
      var results;
      results = talib.LINEARREG({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.linearreg_angle = function(data, lag, period) {
      var results;
      results = talib.LINEARREG_ANGLE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.linearreg_intercept = function(data, lag, period) {
      var results;
      results = talib.LINEARREG_INTERCEPT({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.linearreg_slope = function(data, lag, period) {
      var results;
      results = talib.LINEARREG_SLOPE({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.ma = function(data, lag, period, MAType) {
      var results;
      results = talib.MA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInMAType: MAType
      });
      return _.last(results);
    };

    functions.macd = function(data, lag, FastPeriod, SlowPeriod, SignalPeriod) {
      var result, results;
      results = talib.MACD({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInFastPeriod: FastPeriod,
        optInSlowPeriod: SlowPeriod,
        optInSignalPeriod: SignalPeriod
      });
      result = {
        macd: _.last(results.outMACD),
        signal: _.last(results.outMACDSignal),
        histogram: _.last(results.outMACDHist)
      };
      return result;
    };

    functions.macdext = function(data, lag, FastPeriod, FastMAType, SlowPeriod, SlowMAType, SignalPeriod, SignalMAType) {
      var result, results;
      results = talib.MACDEXT({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInFastPeriod: FastPeriod,
        optInFastMAType: FastMAType,
        optInSlowPeriod: SlowPeriod,
        optInSlowMAType: SlowMAType,
        optInSignalPeriod: SignalPeriod,
        optInSignalMAType: SignalMAType
      });
      result = {
        macd: _.last(results.outMACD),
        signal: _.last(results.outMACDSignal),
        histogram: _.last(results.outMACDHist)
      };
      return result;
    };

    functions.macdfix = function(data, lag, SignalPeriod) {
      var result, results;
      results = talib.MACDFIX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInSignalPeriod: SignalPeriod
      });
      result = {
        macd: _.last(results.outMACD),
        signal: _.last(results.outMACDSignal),
        histogram: _.last(results.outMACDHist)
      };
      return result;
    };

    functions.mama = function(data, lag, FastLimitPeriod, SlowLimitPeriod) {
      var result, results;
      results = talib.MAMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInFastLimit: FastLimitPeriod,
        optInSlowLimit: SlowLimitPeriod
      });
      result = {
        mama: _.last(results.outMAMA),
        fama: _.last(results.outFAMA)
      };
      return result;
    };

    functions.mavp = function(data, periods, lag, MinPeriod, MaxPeriod, MAType) {
      var results;
      results = talib.MAVP({
        inReal: data,
        inPeriods: periods,
        startIdx: 0,
        endIdx: data.length - lag,
        optInMinPeriod: MinPeriod,
        optInMaxPeriod: MaxPeriod,
        optInMAType: MAType
      });
      return _.last(results);
    };

    functions.max = function(data, lag, period) {
      var results;
      results = talib.MAX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.maxindex = function(data, lag, period) {
      var results;
      results = talib.MAXINDEX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.medprice = function(high, low, lag, period) {
      var results;
      results = talib.MEDPRICE({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.mfi = function(high, low, close, volume, lag, period) {
      var results;
      results = talib.MFI({
        high: high,
        low: low,
        close: close,
        volume: volume,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.midpoint = function(data, lag, period) {
      var results;
      results = talib.MIDPOINT({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.midprice = function(high, low, lag, period) {
      var results;
      results = talib.MIDPRICE({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.min = function(data, lag, period) {
      var results;
      results = talib.MIN({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.minindex = function(data, lag, period) {
      var results;
      results = talib.MININDEX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.minmax = function(data, lag, period) {
      var result, results;
      results = talib.MINMAX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      result = {
        min: _.last(results.outMin),
        max: _.last(results.outMax)
      };
      return result;
    };

    functions.minmaxindex = function(data, lag, period) {
      var result, results;
      results = talib.MINMAXINDEX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      result = {
        min: _.last(results.outMinIdx),
        max: _.last(results.outMaxIdx)
      };
      return result;
    };

    functions.minus_di = function(high, low, close, lag, period) {
      var results;
      results = talib.MINUS_DI({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.minus_dm = function(high, low, lag, period) {
      var results;
      results = talib.MINUS_DM({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.mom = function(data, lag, period) {
      var results;
      results = talib.MOM({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.natr = function(high, low, close, lag, period) {
      var results;
      results = talib.NATR({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.obv = function(data, volume, lag) {
      var results;
      results = talib.OBV({
        inReal: data,
        volume: volume,
        startIdx: 0,
        endIdx: data.length - lag
      });
      return _.last(results);
    };

    functions.plus_di = function(high, low, close, lag, period) {
      var results;
      results = talib.PLUS_DI({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.plus_dm = function(high, low, lag, period) {
      var results;
      results = talib.PLUS_DM({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.ppo = function(data, lag, FastPeriod, SlowPeriod, MAType) {
      var results;
      results = talib.PPO({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInFastPeriod: FastPeriod,
        optInSlowPeriod: SlowPeriod,
        optInMAType: MAType
      });
      return _.last(results);
    };

    functions.roc = function(data, lag, period) {
      var results;
      results = talib.ROC({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.rocp = function(data, lag, period) {
      var results;
      results = talib.ROCP({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.rocr = function(data, lag, period) {
      var results;
      results = talib.ROCR({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.rocr100 = function(data, lag, period) {
      var results;
      results = talib.ROCR100({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.rsi = function(data, lag, period) {
      var results;
      results = talib.RSI({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.sar = function(high, low, lag, accel, accelmax) {
      var results;
      results = talib.SAR({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInAcceleration: accel,
        optInMaximum: accelmax
      });
      return _.last(results);
    };

    functions.sarext = function(high, low, lag, StartValue, OffsetOnReverse, AccelerationInitLong, AccelerationLong, AccelerationMaxLong, AccelerationInitShort, AccelerationShort, AccelerationMaxShort) {
      var results;
      results = talib.SAREXT({
        high: high,
        low: low,
        startIdx: 0,
        endIdx: high.length - lag,
        optInStartValue: StartValue,
        optInOffsetOnReverse: OffsetOnReverse,
        optInAccelerationInitLong: AccelerationInitLong,
        optInAccelerationLong: AccelerationLong,
        optInAccelerationMaxLong: AccelerationMaxLong,
        optInAccelerationInitShort: AccelerationInitShort,
        optInAccelerationShort: AccelerationShort,
        optInAccelerationMaxShort: AccelerationMaxShort
      });
      return _.last(results);
    };

    functions.sma = function(data, lag, period) {
      var results;
      results = talib.SMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.stddev = function(data, lag, period, NbDev) {
      var results;
      results = talib.STDDEV({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInNbDev: NbDev
      });
      return _.last(results);
    };

    functions.stoch = function(high, low, close, lag, fastK_period, slowK_period, slowK_MAType, slowD_period, slowD_MAType) {
      var result, results;
      results = talib.STOCH({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInFastK_Period: fastK_period,
        optInSlowK_Period: slowK_period,
        optInSlowK_MAType: slowK_MAType,
        optInSlowD_Period: slowD_period,
        optInSlowD_MAType: slowD_MAType
      });
      result = {
        K: _.last(results.outSlowK),
        D: _.last(results.outSlowD)
      };
      return result;
    };

    functions.stochf = function(high, low, close, lag, fastK_period, fastD_period, fastD_MAType) {
      var result, results;
      results = talib.STOCHF({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInFastK_Period: fastK_period,
        optInFastD_Period: fastD_period,
        optInFastD_MAType: fastD_MAType
      });
      result = {
        K: _.last(results.outFastK),
        D: _.last(results.outFastD)
      };
      return result;
    };

    functions.stochrsi = function(data, lag, period, fastK_period, fastD_period, fastD_MAType) {
      var result, results;
      results = talib.STOCHRSI({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInFastK_Period: fastK_period,
        optInFastD_Period: fastD_period,
        optInFastD_MAType: fastD_MAType
      });
      result = {
        K: _.last(results.outFastK),
        D: _.last(results.outFastD)
      };
      return result;
    };

    functions.sum = function(data, lag, period) {
      var results;
      results = talib.SUM({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.t3 = function(data, lag, period, vfactor) {
      var results;
      results = talib.T3({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInVFactor: vfactor
      });
      return _.last(results);
    };

    functions.tema = function(data, lag, period) {
      var results;
      results = talib.TEMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.trange = function(high, low, close, lag, period) {
      var results;
      results = talib.TRANGE({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.trima = function(data, lag, period) {
      var results;
      results = talib.TRIMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.trix = function(data, lag, period) {
      var results;
      results = talib.TRIX({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.tsf = function(data, lag, period) {
      var results;
      results = talib.TSF({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.typprice = function(high, low, close, lag, period) {
      var results;
      results = talib.TYPPRICE({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.ultosc = function(high, low, close, lag, Period1, Period2, Period3) {
      var results;
      results = talib.ULTOSC({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod1: Period1,
        optInTimePeriod2: Period2,
        optInTimePeriod3: Period3
      });
      return _.last(results);
    };

    functions.variance = function(data, lag, period, NbVar) {
      var results;
      results = talib.VAR({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period,
        optInNbDev: NbVar
      });
      return _.last(results);
    };

    functions.wclprice = function(high, low, close, lag, period) {
      var results;
      results = talib.WCLPRICE({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.willr = function(high, low, close, lag, period) {
      var results;
      results = talib.WILLR({
        high: high,
        low: low,
        close: close,
        startIdx: 0,
        endIdx: high.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    functions.wma = function(data, lag, period) {
      var results;
      results = talib.WMA({
        inReal: data,
        startIdx: 0,
        endIdx: data.length - lag,
        optInTimePeriod: period
      });
      return _.last(results);
    };

    return functions;

  })();

  ({
    init: function(context) {
      context.lag = 1;
      return context.period = 20;
    },
    handle: function(context, data) {
      var ad, instrument;
      instrument = data.instruments[0];
      ad = functions.ad(instrument.high, instrument.low, instrument.close, instrument.volumes, context.lag, context.period);
      return debug("" + ad);
    }
  });

}).call(this);
